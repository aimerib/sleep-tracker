h1 Settings
h3 Avatar
= form_for @avatar_changeset, Routes.user_settings_path(@conn, :update_avatar), fn f ->
  img class="avatar avatar-settings" src=@conn.assigns.current_user.avatar
  = hidden_input f, :avatar, value: @conn.assigns.current_user.avatar
  .avatar_buttons
    = submit "Update avatar", disabled: true, class: "button avatar-update-button"
    a id="upload_widget" class="button" Upload new picture
h3 Change email
= form_for @email_changeset, Routes.user_settings_path(@conn, :update_email), fn f ->
  = if @email_changeset.action do
    .alert.alert-danger
      p Oops, something went wrong! Please check the errors below.
  = label f, :email
  = email_input f, :email, required: true
  = error_tag f, :email
  = label f, :current_password, for: "current_password_for_email"
  = password_input f, :current_password, required: true, name: "current_password", id: "current_password_for_email"
  = error_tag f, :current_password
  div
    = submit "Change email"
h3 Change password
= form_for @password_changeset, Routes.user_settings_path(@conn, :update_password), fn f ->
  = if @password_changeset.action do
    .alert.alert-danger
      p Oops, something went wrong! Please check the errors below.
  = label f, :password, "New password"
  = password_input f, :password, required: true
  = error_tag f, :password
  = label f, :password_confirmation, "Confirm new password"
  = password_input f, :password_confirmation, required: true
  = error_tag f, :password_confirmation
  = label f, :current_password, for: "current_password_for_password"
  = password_input f, :current_password, required: true, name: "current_password", id: "current_password_for_password"
  = error_tag f, :current_password
  div
    = submit "Change password"
h3 API Token
= form_for @auth_token_changeset, Routes.user_settings_path(@conn, :create_auth_token), fn _ ->
  = if @auth_token_changeset.action do
    .alert.alert-danger
      p Oops, something went wrong! Please check the errors below.
  = if @conn.assigns.current_user.auth_token do
    p.token-form = @conn.assigns.current_user.auth_token
    .token-form-buttons
      = submit "Create new token"
      = button "Delete token", to: Routes.user_settings_path(@conn, :reset_auth_token), method: :delete, data: [confirm: "Are you sure?"], class: "btn btn-danger"
  - else
    div
      = submit "Create token"

= link "Back to homepage", to: Routes.landing_page_path(@conn, :index), class: "button"

eex:
  <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>

javascript:
  const avatar_image = document.querySelector(".avatar-settings");
  const avatar_field = document.querySelector("#user_avatar");
  const avatar_button = document.querySelector(".avatar-update-button");

  cloudinary.setCloudName("sleeptracker");
    const myCropWidget = cloudinary.createUploadWidget(
      {
        cloudName: 'sleeptracker',
        uploadPreset: 'kbvjss51',
        folder: 'avatars',
        cropping: true,
        sources: ['local'],
        croppingAspectRatio: 1,
        skipCropping: true,
        styles:{
          palette: {
            window: "#302050",
            windowBorder: "#fff",
            tabIcon: "#fff",
            menuIcons: "#fff",
            textDark: "#000000",
            textLight: "#FFFFFF",
            link:  "#fff",
            action:  "#fff",
            inactiveTabIcon: "#0E2F5A",
            error: "#F44235",
            inProgress: "#0078FF",
            complete: "#20B832",
            sourceBg: "#645394"
          },
        }
      },
      (error, result) => {
        if (!error && result && result.event === "success") {
          avatar_image.src = result["info"]["secure_url"]
          avatar_field.value = result["info"]["secure_url"]
          avatar_button.disabled = false
        }
      }
    )
  document.getElementById("upload_widget").addEventListener("click", function(){
    myCropWidget.open();
  }, false);
